---

- name: "Setup: Uninstall old versions and install dependencies"
  block:
    - name: "CentOS/RedHat: Uninstall old Calibre versions."
      yum:
        name: calibre
        state: absent
      register: _yum_uninstall
      async: 600
      poll: 0
      when: ansible_distribution == "CentOS" or ansible_distribution == "Red Hat Enterprise Linux"

    - name: "Debian/Ubuntu: Uninstall old Calibre versions."
      apt:
        name: calibre
        state: absent
      register: _apt_uninstall
      async: 600
      poll: 0
      when: ansible_os_family == "Debian"

    - name: "Arch: Uninstall old Calibre versions."
      pacman:
        name: calibre
        state: absent
      register: _pacman_uninstall
      async: 600
      poll: 0
      when: ansible_os_family == "Archlinux"

    - name: "Fedora: Uninstall old Calibre versions."
      dnf:
        name: calibre
        state: absent
      register: _dnf_uninstall
      async: 600
      poll: 0
      when: ansible_distribution == "Fedora"
    
    - name: "Suse: Uninstall old Calibre versions."
      zypper:
        name: calibre
        state: absent
      register: _zypper_uninstall
      async: 600
      poll: 0
      when: ansible_os_family == "Suse"

    - name: Wait for package uninstall to finish
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _uninstall_results
      until: _uninstall_results.finished is defined and _uninstall_results.finished
      delay: 5  # Check every 5 seconds. Adjust as you like.
      retries: 120  # Retry up to 120 times. Adjust as needed.
      loop:
        - "{{ _apt_uninstall }}"
        - "{{ _dnf_uninstall }}"
        - "{{ _zypper_uninstall }}"
        - "{{ _pacman_uninstall }}"
        - "{{ _yum_uninstall }}"
      when: item.ansible_job_id is defined

    - name: "Debian/Ubuntu: Install Calibre dependencies"
      apt:
        name:
          - xdg-utils
          - xz-utils
          - wget
          - sudo
          # - libstdc++6
        state: present
      register: _apt_dependencies_install
      async: 600
      poll: 0
      when: ansible_os_family == "Debian"
    
    - name: "CentOS/RedHat: Install Calibre dependencies"
      yum:
        name:
          - xdg-utils
          - xz
          - xz-devel
          - wget
          - sudo
          # - libstdc++-devel
        state: present
      register: _yum_dependencies_install
      async: 600
      poll: 0
      when: ansible_distribution == "CentOS" or ansible_distribution == "Red Hat Enterprise Linux"
      
    - name: "Arch: Install Calibre dependencies"
      pacman:
        name:
          - xdg-utils
          - xz
          - wget
          - sudo
        state: present
      register: _pacman_dependencies_install
      async: 600
      poll: 0
      when: ansible_os_family == "Archlinux"
  
    - name: "Suse: Install Calibre dependencies"
      zypper:
        name:
          - xz
          - xz-devel
          - wget
          - xdg-utils
          - sudo
          - tar
        state: present
      register: _zypper_dependencies_install
      async: 600
      poll: 0
      when: ansible_os_family == "Suse"

    - name: "Fedora: Install Calibre dependencies"
      dnf:
        name:
          - xz
          - xz-devel
          - wget
          - sudo
        state: present
      register: _dnf_dependencies_install
      async: 600
      poll: 0
      when: ansible_distribution == "Fedora"

    - name: Wait for package dependencies to install
      async_status:
        jid: "{{ item.ansible_job_id }}"
      register: _dependencies_install_results
      until: _dependencies_install_results.finished is defined and _dependencies_install_results.finished
      delay: 5  # Check every 5 seconds. Adjust as you like.
      retries: 120  # Retry up to 120 times. Adjust as needed.
      loop:
        - "{{ _apt_dependencies_install }}"
        - "{{ _dnf_dependencies_install }}"
        - "{{ _zypper_dependencies_install }}"
        - "{{ _pacman_dependencies_install }}"
        - "{{ _yum_dependencies_install }}"
      when: item.ansible_job_id is defined

- name: "Install Calibre"
  block:
    - name: Download Calibre Installer
      run_once: true
      delegate_to: localhost
      get_url:
        url: https://download.calibre-ebook.com/linux-installer.sh
        dest: /tmp/linux-installer.sh
        force: yes
      register: _urlDownload

    - name: Debug Download URL
      debug:
        var: _urlDownload
    
    - name: Execute Calibre Install Script on Targets
      script: "{{ _urlDownload.dest }}"
      become: true
      register: _install

    - name: Debug Install
      debug:
        var: _install

    # - name: Remove dependencies that are no longer required
    #   apt:
    #     autoremove: yes
    
    # - name: Wait for package installation to finish
    #   async_status:
    #     jid: "{{ item.ansible_job_id }}"
    #   register: _install_results
    #   until: _install_results.finished is defined and _install_results.finished
    #   delay: 5  # Check every 5 seconds. Adjust as you like.
    #   retries: 120  # Retry up to 120 times. Adjust as needed.
    #   loop:
    #     - "{{ _install }}"
    #   when: item.ansible_job_id is defined
